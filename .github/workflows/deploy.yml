# [Reference] https://github.com/fregante/chrome-webstore-upload-keys?tab=readme-ov-file
# [Reference] https://jam.dev/blog/automating-chrome-extension-publishing/
name: Upload Chrome Extension

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    upload-extension:
        name: Upload Chrome Extension
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.extract_version.outputs.version }}

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  submodules: recursive
                  token: ${{ secrets.ACTION_TOKEN }}

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Extract Version from manifest.json
              id: extract_version
              run: |
                  VERSION=$(node -p "require('./public/manifest.json').version")
                  echo "Extracted version: $VERSION"
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  echo "::set-output name=version::$VERSION"

            - name: Locate ZIP file
              run: |
                  ZIP_FILE="build/production/build-${VERSION}.zip"
                  if [[ ! -f "$ZIP_FILE" ]]; then
                    echo "Error: ZIP file not found at $ZIP_FILE"
                    exit 1
                  fi
                  echo "ZIP file located: $ZIP_FILE"

            - name: Install webstore CLI
              run: npm install -g chrome-webstore-upload-cli

            - name: Upload Chrome Extension
              run: |-
                  chrome-webstore-upload upload \
                    --source build/production/build-${VERSION}.zip \
                    --extension-id ${{ secrets.EXTENSION_ID }} \
                    --client-id ${{ secrets.CI_GOOGLE_CLIENT_ID }} \
                    --client-secret ${{ secrets.CI_GOOGLE_CLIENT_SECRET }} \
                    --refresh-token ${{ secrets.CI_GOOGLE_REFRESH_TOKEN }}

    commit-and-tag:
        name: Push Version Tag
        runs-on: ubuntu-latest
        needs: upload-extension
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  token: ${{ secrets.ACTION_TOKEN }}

            - name: Configure Git
              run: |
                  git config --global user.name "GitHub Actions"
                  git config --global user.email "actions@github.com"

            - name: Create and Push Version Tag
              run: |
                  VERSION=${{ needs.upload-extension.outputs.version }}
                  git tag -a v${VERSION} -m "Release version $VERSION"
                  git push origin v${VERSION}
